---
// Get current locale from URL path or default to 'en'
const currentPathname = Astro.url.pathname;
const currentLocale = currentPathname.startsWith('/pt') ? 'pt' : 'en';
const locales = ['en', 'pt'];
const defaultLocale = 'en';

// Helper function to get URL for a specific locale
function getLocaleUrl(locale: string, path: string): string {
  if (locale === defaultLocale) {
    return path === '/' ? '/' : path;
  }
  return `/${locale}${path === '/' ? '' : path}`;
}
---

<div class="language-switcher flex items-center space-x-2">
    {locales.map((locale: string) => {
        const isActive = locale === currentLocale;
        // Construct the target path carefully
        let targetPath = Astro.url.pathname;
        if (currentLocale !== defaultLocale) {
            targetPath = targetPath.replace(`/${currentLocale}`, '');
        }
        if (targetPath === '') targetPath = '/';

        const url = getLocaleUrl(locale, targetPath);

        return (
                <a
                        href={url}
                        class:list={[
                            "px-3 py-1.5 rounded-md text-sm font-medium transition-colors",
                            isActive ? "bg-brand-primary text-white cursor-default" : "text-gray-500 hover:bg-gray-200 hover:text-gray-700",
                        ]}
                        aria-current={isActive ? 'page' : false}
                        data-astro-reload
                >
                    {locale.toUpperCase()}
                </a>
        );
    })}
</div>
