---
import LanguageSwitcher from '../components/LanguageSwitcher.astro';
import {getRelativeLocaleUrl} from "astro/virtual-modules/i18n";

interface LayoutContent {
    meta: {
        title: string;
        description: string;
    };
    navigation: {
        descriptionLink: string;
        specificationsLink: string;
        mapLink: string;
        contactLink: string;
        [key: string]: string;
    };
    [key: string]: any;
}

// Get current locale from URL path or default to 'en'
const currentPathname = Astro.url.pathname;
const currentLocale = currentPathname.startsWith('/pt') ? 'pt' : 'en';
const content: LayoutContent = await import(`../content/property/${currentLocale}.json`).then(module => module.default);

const { title: pageTitle, description: pageDescription } = content.meta;
const { navigation } = content;

const canonicalURL = new URL(Astro.url.pathname, Astro.site);

// Define available locales
const locales = ['en', 'pt'];
const defaultLocale = 'en';

// Helper function to get URL for a specific locale
function getLocaleUrl(locale: string, path: string): string {
  if (locale === defaultLocale) {
    return path === '/' ? '/' : path;
  }
  return `/${locale}${path === '/' ? '' : path}`;
}
---

<!doctype html>
<html lang={currentLocale} class="scroll-smooth">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="description" content={pageDescription} />
    <title>{pageTitle}</title>

    <link rel="canonical" href={canonicalURL.href} />
    {locales.map(locale => (
            <link
                    rel="alternate"
                    hreflang={locale}
                    href={getRelativeLocaleUrl(locale, Astro.url.pathname === `/${currentLocale === defaultLocale ? '' : currentLocale}` ? (locale === defaultLocale ? '/' : `/${locale}/`) : Astro.url.pathname.replace(`/${currentLocale}`, locale === Astro.config.i18n.defaultLocale ? '' : `/${locale}`))}
            />
    ))}
    <link rel="alternate" hreflang="x-default" href={getRelativeLocaleUrl(defaultLocale, '/')} />

    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Figtree:wght@300;400;500;600;700;800&display=swap" rel="stylesheet">

    <slot name="head" />
    <style is:global>
        @tailwind base;
        @tailwind components;
        @tailwind utilities;

        body {
            @apply bg-brand-bg text-brand-text antialiased font-sans;
        }
        .section-title {
            @apply text-4xl font-bold text-brand-primary mb-8 pb-3 border-b-2 border-brand-secondary;
        }
        .container-custom {
            @apply max-w-6xl mx-auto px-4 sm:px-6 lg:px-8; /* Slightly wider for a premier feel */
        }
        /* Custom scrollbar for a more elegant touch (optional, browser support varies) */
        ::-webkit-scrollbar {
            width: 8px;
        }
        ::-webkit-scrollbar-track {
            background: theme('colors.brand-light-gray');
        }
        ::-webkit-scrollbar-thumb {
            background: theme('colors.brand-secondary');
            border-radius: 4px;
        }
        ::-webkit-scrollbar-thumb:hover {
            background: theme('colors.brand-accent');
        }
    </style>
</head>
<body class="flex flex-col min-h-screen">
<header class="bg-brand-bg shadow-subtle sticky top-0 z-50 backdrop-blur-md bg-opacity-90">
    <div class="container-custom py-5"> {/* Increased padding */}
        <nav class="flex justify-between items-center">
            <a href={getRelativeLocaleUrl(currentLocale, '')} class="text-3xl font-extrabold text-brand-primary hover:text-brand-accent transition-colors duration-300 ease-custom-ease">
                Mirador Flat
            </a>
            <ul class="flex space-x-8 items-center"> {/* Increased spacing */}
                <li><a href="#description" class="text-lg text-brand-text hover:text-brand-secondary transition-colors duration-300 ease-custom-ease font-medium">{navigation.descriptionLink}</a></li>
                <li><a href="#specifications" class="text-lg text-brand-text hover:text-brand-secondary transition-colors duration-300 ease-custom-ease font-medium">{navigation.specificationsLink}</a></li>
                <li><a href="#map" class="text-lg text-brand-text hover:text-brand-secondary transition-colors duration-300 ease-custom-ease font-medium">{navigation.mapLink}</a></li>
                <li><a href="#contact" class="bg-brand-primary text-white px-6 py-3 rounded-lg hover:bg-brand-text transition-colors duration-300 ease-custom-ease text-lg font-semibold shadow-md hover:shadow-lifted transform hover:-translate-y-0.5">{navigation.contactLink}</a></li>
                <li><LanguageSwitcher /></li>
            </ul>
        </nav>
    </div>
</header>

<main class="flex-grow">
    <slot />
</main>

<footer class="bg-brand-dark-bg text-brand-light-gray py-10 mt-16">
    <div class="container-custom text-center">
        <p class="text-base">&copy; {new Date().getFullYear()} Mirador Aveiro Flat. All rights reserved.</p>
        <p class="text-sm mt-2 opacity-75">Design for a Premier Property Experience</p>
    </div>
</footer>

<script is:inline>
const observer = new IntersectionObserver((entries) => {
  entries.forEach(entry => {
    if (entry.isIntersecting) {
      entry.target.classList.add('animate-fadeUp');
      observer.unobserve(entry.target);
    }
  });
});

document.addEventListener('DOMContentLoaded', () => {
  document.querySelectorAll('.animate-on-scroll').forEach(el => observer.observe(el));
});
</script>
</body>
</html>
